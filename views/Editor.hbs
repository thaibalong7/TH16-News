<div class="section">
    <div class="container">
        <div class="col-md-12">
            <div class="row">
                <div class="list-cata">
                    <h1>Danh sách bài viết Draft</h1>
                    <div id="editor-post-list-category">
                        {{#each news}}
                        <div class="col-md-12">
                            <div class="post post-row">
                                <a class="post-img" href="#"><img src="{{avatar}}"></a>
                                <div class="post-body">
                                    <div class="post-meta">
                                        <span class="post-category">{{sub_category.name}}</span>
                                        <span class="post-category cat-1">{{sub_category.category.name}}</span>
                                        <span class="post-date">{{createdAt}}</span>

                                        <button type="button" class="post-category cat-2" data-toggle="modal"
                                            data-target="#approve-modal" style="float:right">Duyệt</button>
                                        <button type="button" class="post-category cat-3" data-toggle="modal"
                                            data-target="#reject-modal" style="float:right">Từ chối</button>
                                    </div>
                                    <h3 class="post-title"><a href="{{link}}">{{name}}</a></h3>
                                    <p class="post-abstract">{{abstract}}</p>
                                </div>
                            </div>
                        </div>
                        {{/each}}
                    </div>
                    <div id="load-more-editor-list-container" class="col-md-12" next_page={{page}} per_page={{per_page}}
                        hidden>
                        <div class="section-row">
                            <button class="primary-button center-block" id="editor-load-more-list">Xem Thêm</button>
                        </div>
                    </div>
                    {{!-- loading --}}
                    <div id="loading-editor-container" class="col-md-12 loading">
                        <img class="center-block" src="/img/loading.gif" alt=""></img>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="reject-modal" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h2 class="modal-title">Lý do từ chối vài biết: </h2>
                    </div>
                    <div class="modal-body">
                        <textarea id="reject-reason" placeholder="Viết lý do từ chối vào đây"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-modal-cancel" data-dismiss="modal">Đóng</button>
                        <button type="button" id="modal-reject-news-btn" class="btn-modal-send" onclick="click_send_reject_news(this)">Gửi</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="approve-modal" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h2 class="modal-title">Bạn đồng ý duyệt bài viết này? </h2>
                    </div>
                    <div class="modal-body">
                        <h3>Bạn có muốn điều chỉnh lại chuyên mục và các nhãn của bài viết này?</h3>

                        <table>
                            <tr>
                                <td>
                                    <h4>Chuyên mục chính:</h4>
                                </td>
                                <td>
                                    <select onchange="editor_change_select_category()" id="editor_select_category">
                                    </select>
                                </td>
                            </tr>
                        </table>
                        <table>
                            <tr>
                                <td>
                                    <h4>Chuyên mục phụ: </h4>
                                </td>
                                <td>
                                    <select id="editor_select_sub_category" onchange="editor_change_select_sub_category()">
                                    </select>
                                </td>
                            </tr>
                        </table>
                        <table>
                            <tr>
                                <td>
                                    <h4>Tag:</h4>
                                </td>
                                <td><select id="editor-select-tag">
                                        {{#each tag}}
                                        <option value={{this.id}}>{{this.name}}</option>
                                        {{/each}}
                                    </select>
                                </td>
                                <td><button id="editor_btn_add_tag" onclick="editor_add_tag_click()">+</button></td>
                            </tr>
                        </table>
                        <div>
                            <h4>Danh sách tag đã thêm: </h4>
                            <div id="editor_list_tag">
                            </div>
                        </div>
                        <div id="date_time">
                            <table id="form-profile-xuatban">
                                <tr>
                                    <td>
                                        <h4>Ngày xuất bản: </h4>
                                    </td>
                                    <td>
                                        <div><input id="release-datetime" type="datetime-local" name="bdaytime">
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-modal-cancel" data-dismiss="modal">Đóng</button>
                        <button type="button" id="approve-btn-model" class="btn-modal-send" idnews="" onclick="approve_news(this)">Duyệt</button>
                        <button id="button-xuatban" idnews="" onclick="release_news_now(this)">Xuất bản ngay</button>
                    </div>
                </div>
            </div>
        </div>
        <script>
            var list_tag = []

            document.getElementById('release-datetime').min = new Date().toISOString().split("T")[0];

            function fetchNewsEditor() {
                $.ajax("/api/editor/getNewsByEditor?page=" + $("#load-more-editor-list-container").attr('next_page') + "&per_page=" + $("#load-more-editor-list-container").attr('per_page'), {
                    type: 'get',
                    dataType: 'json'
                }).done((_data) => {
                    console.log(_data);
                    const list_post = $("#editor-post-list-category");
                    for (let i = 0, l = _data.data.length; i < l; i++) {
                        list_post.append(`<div class="col-md-12">
                            <div class="post post-row">
                                <a class="post-img" href="${_data.data[i].link}"><img src="${_data.data[i].avatar}"></a>
                                <div class="post-body">
                                    <div class="post-meta">
                                        <span class="post-category">${_data.data[i].sub_category.name}</span>
                                        <span class="post-category cat-1">${_data.data[i].sub_category.category.name}</span>
                                        <span class="post-date">${_data.data[i].createdAt}</span>

                                        <button type="button" class="post-category cat-2" data-toggle="modal" idnews="${_data.data[i].id}"
                                            data-target="#approve-modal" style="float:right" onClick='approve_click(this)'>Duyệt</button>
                                        <button type="button" class="post-category cat-3" data-toggle="modal" idnews="${_data.data[i].id}"
                                            data-target="#reject-modal" style="float:right"onClick="reject_click(this)">Từ chối</button>
                                    </div>
                                    <h3 class="post-title"><a href="${_data.data[i].link}">${_data.data[i].title}</a></h3>
                                    <p class="post-abstract">${_data.data[i].abstract}</p>
                                </div>
                            </div>
                        </div>`);
                    }

                    if (_data.next_page > 0) {
                        $("#load-more-editor-list-container").show();
                        $("#load-more-editor-list-container").attr("next_page", _data.next_page);
                    }
                    $("#loading-editor-container").hide();
                }).fail(function (xhr, textStatus, errorThrown) {
                    var err = JSON.parse(xhr.responseText);
                    alert(err.msg);
                });
            }

            fetchNewsEditor();

            $("#editor-load-more-list").click(function () {
                $("#load-more-editor-list-container").hide();
                $("#loading-editor-container").show();
                fetchNewsEditor();
            })

            function approve_click(btn) {
                $.ajax("/api/editor/getCategoryAndTagOfNews/" + btn.getAttribute('idnews'), {
                    type: 'get',
                    dataType: 'json'
                }).done(data => {
                    $("#editor_select_category").val(data.data.sub_category.fk_category);
                    editor_change_select_category();
                    $("#editor_select_sub_category").val(data.data.sub_category.id);
                    list_tag = [];
                    $("#editor_list_tag").empty();
                    for (let i = 0, l = data.data.tags.length; i < l; i++) {
                        list_tag.push({
                            name: data.data.tags[i].tag.name,
                            id: data.data.tags[i].tag.id
                        })
                        $("#editor_list_tag").append(`<label id = "${data.data.tags[i].id}">${data.data.tags[i].tag.name}<button id ="${data.data.tags[i].id}" onClick = 'editor_delete_tag(this.id)'>X</button></label>`)
                    };
                    $("#approve-btn-model").attr("idnews", btn.getAttribute('idnews'))
                    $("#button-xuatban").attr("idnews", btn.getAttribute('idnews'))
                }).fail(function (xhr, textStatus, errorThrown) {
                    var err = JSON.parse(xhr.responseText);
                    alert(err.msg);
                });
            }

            function checkIfDateNotValid(d) { //kiểm tra date có invalid hay không
                try {
                    var d = new Date(d);
                    return !(d.getTime() === d.getTime()); //NAN is the only type which is not equal to itself.
                } catch (e) {
                    return true;
                }

            }

            function approve_news(btn) {
                const data_approve = {
                    idNews: btn.getAttribute('idnews'),
                };
                const list_tag_submit = [];
                for (let i = 0, l = list_tag.length; i < l; i++) {
                    list_tag_submit.push(list_tag[i].id);
                }
                data_approve.list_tag = list_tag_submit;
                data_approve.sub_category = $('#editor_select_sub_category').val();
                const release_date = new Date($('#release-datetime').val())
                if (checkIfDateNotValid(release_date) === true) {
                    //release_date is invalid
                    alert("Vui lòng nhập ngày xuất bản hợp lệ")
                }
                else {
                    if (release_date < new Date()) {
                        alert("Vui lòng nhập ngày xuất bản ở tương lai")
                    }
                    else {
                        data_approve.publicAt = release_date;
                        $.ajax("/api/editor/approve_news", {
                            type: 'post',
                            dataType: 'json',
                            data: data_approve
                        }).done((_data) => {
                            location.reload();
                        }).fail(function (xhr, textStatus, errorThrown) {
                            var err = JSON.parse(xhr.responseText);
                            alert(err.msg);
                        });
                    }
                }
            }

            function release_news_now(btn) {
                const data_approve = {
                    idNews: btn.getAttribute('idnews'),
                };
                const list_tag_submit = [];
                for (let i = 0, l = list_tag.length; i < l; i++) {
                    list_tag_submit.push(list_tag[i].id);
                }
                data_approve.list_tag = list_tag_submit;
                data_approve.sub_category = $('#editor_select_sub_category').val();
                data_approve.isPublicNow = true;
                $.ajax("/api/editor/approve_news", {
                    type: 'post',
                    dataType: 'json',
                    data: data_approve
                }).done((_data) => {
                    location.reload();
                }).fail(function (xhr, textStatus, errorThrown) {
                    var err = JSON.parse(xhr.responseText);
                    alert(err.msg);
                });
            }


            function reject_click(btn) {
                $("#modal-reject-news-btn").attr("idnews", btn.getAttribute('idnews'));
            }

            function click_send_reject_news(btn) {
                const data_reject = {
                    idNews: btn.getAttribute('idnews'),
                };
                if ($("#reject-reason").val().length < 10) { //độ dài lý do quá ngắn
                    alert("Vui lòng nhập lý do trên 10 ký tự")
                }
                else {
                    data_reject.rejected_reason = $("#reject-reason").val();
                    console.log(data_reject);
                    $.ajax("/api/editor/reject_news", {
                        type: 'post',
                        dataType: 'json',
                        data: data_reject
                    }).done((_data) => {
                        location.reload();
                    }).fail(function (xhr, textStatus, errorThrown) {
                        var err = JSON.parse(xhr.responseText);
                        alert(err.msg);
                    });
                }
            }

            function editor_add_tag_click() {
                e = document.getElementById("editor-select-tag");
                var strUser = e.options[e.selectedIndex].text;
                var value = parseInt(e.value);
                var s = new String("");
                if (list_tag.length == 0)
                    list_tag.push({
                        name: strUser,
                        id: value
                    });
                else {
                    let count = 1;
                    for (let i = 0; i < list_tag.length; i++) {
                        if (list_tag[i].id === value) {
                            count = -1;
                            break;
                        }
                    }
                    if (count === 1) list_tag.push({
                        name: strUser,
                        id: value
                    });
                }
                for (let i = 0; i < list_tag.length; i++) {
                    s = s + "<label id = '" + list_tag[i].id + "'>" + list_tag[i].name + "<button id ='" + list_tag[i].id + "' onClick = 'editor_delete_tag(this.id)'>X</button></label>" + '\n';
                }
                document.getElementById("editor_list_tag").innerHTML = s;
                console.log(list_tag);
            }
            function editor_delete_tag(clicked_id) {
                let idlabel = clicked_id;
                let index = 0;;
                for (; index < list_tag.length; index++) {
                    if (parseInt(idlabel) === list_tag[index].id) {
                        break;
                    }

                }
                if (index < list_tag.length) {
                    list_tag.splice(index, 1);
                }
                var s = new String("");
                for (let i = 0; i < list_tag.length; i++) {
                    s = s + "<label id = '" + list_tag[i].id + "'>" + list_tag[i].name + "<button id ='" + list_tag[i].id + "' onClick = 'editor_delete_tag(this.id)'>X</button></label>" + '\n';
                }
                document.getElementById("editor_list_tag").innerHTML = s;
                console.log(list_tag);
            }

            let list_sub_category;
            $.ajax("/api/categories/getAllCategories", {
                type: 'get',
                dataType: 'json'
            }).done(function (data) {
                const select_category = $("#editor_select_category");
                for (let i = 0, l = data.data.list_category.length; i < l; i++) {
                    select_category.append(` <option value=${data.data.list_category[i].id}>${data.data.list_category[i].name}</option>`)
                };
                list_sub_category = data.data.list_sub_category;
            }).fail(function (xhr, textStatus, errorThrown) {
                var err = JSON.parse(xhr.responseText);
                alert(err.msg);
            });
            function editor_change_select_category() {
                e = document.getElementById("editor_select_category");
                var strUser = e.options[e.selectedIndex].text; // chuỗi được chọn ở chuyên mục cấp 1
                const select_sub_category = $("#editor_select_sub_category");
                select_sub_category.empty();
                for (let i = 0, l = list_sub_category[strUser].length; i < l; i++) {
                    select_sub_category.append(` <option value=${list_sub_category[strUser][i].id}>${list_sub_category[strUser][i].name}</option>`)
                };
            }

            function editor_change_select_sub_category() {
                e = document.getElementById("edit_select_sub_category");
                //var strUser = e.options[e.selectedIndex].text; // chuỗi được chọn ở chuyên mục cấp 2
                //var value = e.value; // giá trị được chọn ở chuyên mục cấp 1
            }

        </script>
    </div>
</div>